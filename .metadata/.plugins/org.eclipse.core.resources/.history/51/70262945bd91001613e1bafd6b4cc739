package binaryTreeTraversal;

import java.util.*;

public class PostOrder {

	public List<Integer> postOrder(TreeNode root) {
		List<Integer> result = new ArrayList<>();
		// base case
		if (root == null) {
			return result;
		}
		result.addAll(postOrder(root.left));
		result.addAll(postOrder(root.right));
		result.add(root.key);
		return result;
	}

	public List<Integer> postOrder2(TreeNode root) {
		List<Integer> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		LinkedList<TreeNode> stack = new LinkedList<>();
		stack.offerFirst(root);
		TreeNode prev = null;
		while (!stack.isEmpty()) {

		}
		return result;
	}
}
