package moveZeroI;

import java.util.Arrays;

// Given an array of integers, move all the 0s to the right end of the array.
// The relative order of the elements in the original array does not need to
// be maintained.

public class MoveZeroI {

	public int[] moveZero(int[] array) {
		if (array == null || array.length == 0) {
			return array;
		}
		int left = 0, right = array.length - 1;
		while (left <= right) {
			if (array[left] != 0) {
				left++;
			} else if (array[right] == 0) {
				right--;
			} else {
				swap(array, left, right);
			}
		}
		return array;
	}
	
	private void swap(int[] array, int left, int right) {
		int temp = array[left];
		array[left] = array[right];
		array[right] = temp;
	}
	
	public static void main(String[] args) {
		MoveZeroI moveZeroI = new MoveZeroI();
		int[] array = null;
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[0];
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[] {0};
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[] {0, 0, -1, 0, -3, 4, 7};
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[] {1, 0, 2, 0, 3, 4, 0};
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[] {0, 4, 3, 2, 1, 0, 0};
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
		array = new int[] {2, 4, 0, 0, 0 , 1, 0, 5, 3};
		System.out.println(Arrays.toString(moveZeroI.moveZero(array)));
	}
}
